{"version":3,"sources":["components/preloader/index.js","initialState.js","actions/index.js","components/select/index.js","fetch/index.js","components/weatherIcon/index.js","components/currentWeather/index.js","components/forecastWeather/index.js","components/errorPage/index.js","components/App.js","index.js","reducers/index.js","preloadImage.js","img/weatherIcons.png"],"names":["Preloader","display","this","props","react_default","a","createElement","className","style","Component","connect","state","preloader","dispatch","initialState","select","cityList","selectedCity","currentWeatherData","forecastWeatherData","weatherIcon","imgLoaded","frames","imgList","name","position","defaultSettings","units","lang","appId","host","error","preloaderDisplay","type","arguments","length","undefined","currentWeatherLoaded","data","forecastWeatherLoaded","Select","_this","cityName","handleChange","eventKey","changeCity","loadWeather","getCityName","citySelected","forEach","city","id","setState","Object","objectSpread","selected","_this2","DropdownButton","title","map","Dropdown","Item","key","onSelect","value","cityId","settings","fetchRequest","url","callback","fetch","then","response","json","catch","err","console","warn","loadCurrentWeather","concat","loadForecastWeather","Promise","all","store","getState","getWeather","WeatherIcon","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setContext","canvas","ctx","getContext","setIcon","xPosition","yPosition","width","height","item","imgData","icon","clearRect","drawImage","img","Image","src","imgSettings","_props$imgSettings","ref","data-img","description","CurrentWeather","getFormatDate","date","getHours","getMinutes","sunset","Date","sys","sunrise","Math","round","main","temp","weather","humidity","Forecast","contentList","activeKey","keys","tabHeaderTemplate","formatDate","parseInt","getTimezoneOffset","log","getDate","toLocaleString","weekday","month","currentTab","list","reduce","prev","current","currentItem","dt","getUTCDate","push","_this3","createContentList","Tabs_default","Tab_default","Table_default","hover","_item","getUTCHours","clouds","transform","ceil","wind","deg","speed","Error","Alert","variant","Heading","App","react","components_preloader","components_select","currentWeather","forecastWeather","errorPage","createStore","action","isLoaded","applyMiddleware","thunk","addEventListener","bool","render","es","components_App","document","getElementById","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.8e8692d2.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './preloader.scss';\r\n\r\nclass Preloader extends Component {\r\n\r\n    render() {\r\n        let { display } = this.props;\r\n        return (\r\n            <div className=\"cssload-container\" style={{display: display ? 'block' : 'none'}}>\r\n                <div className=\"cssload-arc\">\r\n                    <div className=\"cssload-arc-cube\"></div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    state => ({\r\n     display: state.preloader.display\r\n    }),\r\n    dispatch => ({\r\n    })\r\n)(Preloader);","import cityList from \"./json/cityList\";\r\n\r\nlet initialState = {\r\n    preloader: {\r\n        display: true\r\n    },\r\n    select: {\r\n        cityList,\r\n        selectedCity:  '706483'\r\n    },\r\n    currentWeatherData: null,\r\n    forecastWeatherData: null,\r\n    weatherIcon: {\r\n        imgLoaded: false,\r\n        frames:  [3, 6],\r\n        imgList: [\r\n            {\r\n                name: '01d',\r\n                position: [0, 2]\r\n            },\r\n            {\r\n                name: '01n',\r\n                position: [0, 3]\r\n            },\r\n            {\r\n                name: '02d',\r\n                position: [0, 4]\r\n            },\r\n            {\r\n                name: '02n',\r\n                position: [0, 5]\r\n            },\r\n            {\r\n                name: '03d',\r\n                position: [0, 0]\r\n            },\r\n            {\r\n                name: '03n',\r\n                position: [0, 1]\r\n            },\r\n            {\r\n                name: '04d',\r\n                position: [1, 0]\r\n            },\r\n            {\r\n                name: '04n',\r\n                position: [1, 1]\r\n            },\r\n            {\r\n                name: '09d',\r\n                position: [1, 2]\r\n            },\r\n            {\r\n                name: '09n',\r\n                position: [1, 3]\r\n            },\r\n            {\r\n                name: '10d',\r\n                position: [1, 4]\r\n            },\r\n            {\r\n                name: '10n',\r\n                position: [1, 5]\r\n            },\r\n            {\r\n                name: '11d',\r\n                position: [2, 5]\r\n            },\r\n            {\r\n                name: '11n',\r\n                position: [2, 0]\r\n            },\r\n            {\r\n                name: '13d',\r\n                position: [2, 1]\r\n            },\r\n            {\r\n                name: '13n',\r\n                position: [2, 2]\r\n            },\r\n            {\r\n                name: '50d',\r\n                position: [2, 3]\r\n            },\r\n            {\r\n                name: '50n',\r\n                position: [2, 4]\r\n            }\r\n        ]\r\n    },\r\n    defaultSettings: {\r\n        units: 'metric',\r\n        lang: 'ru',\r\n        appId: 'a0416a16e90dab631a9188513a26d825',\r\n        host: 'https://api.openweathermap.org/data/2.5/'\r\n    },\r\n    error: false\r\n};\r\n\r\nexport default initialState;","export function imgLoaded (bool, width = 0, height = 0) {\r\n    return {\r\n        type: 'imgLoaded',\r\n        isLoaded: bool,\r\n        width,\r\n        height\r\n    }\r\n}\r\nexport function preloaderDisplay (bool = true) {\r\n    return {\r\n        type: 'preloaderDisplay',\r\n        display: bool\r\n    }\r\n}\r\nexport function error (bool = false) {\r\n    return {\r\n        type: 'error',\r\n        error: bool\r\n    }\r\n}\r\nexport function currentWeatherLoaded (data) {\r\n    return {\r\n        type: 'setCurrentWeather',\r\n        data\r\n    }\r\n}\r\nexport function forecastWeatherLoaded (data) {\r\n    return {\r\n        type: 'setForecastWeather',\r\n        data\r\n    }\r\n}\r\nexport function changeCity (cityId) {\r\n    return {\r\n        type: 'changeCity',\r\n        cityId\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { DropdownButton, Dropdown } from 'react-bootstrap';\r\nimport './style.scss';\r\nimport getWeather from '../../fetch';\r\nimport { changeCity } from \"../../actions\";\r\n\r\n\r\nclass Select extends Component {\r\n    cityList = this.props.state.cityList;\r\n    state = {\r\n        cityName: ''\r\n    };\r\n\r\n    handleChange = (eventKey) => {\r\n        this.props.changeCity(eventKey);\r\n        this.props.loadWeather(eventKey);\r\n    };\r\n    getCityName = (citySelected) => {\r\n        this.cityList.forEach(city => {\r\n            if (city.id === citySelected) {\r\n                this.setState({...this.state, cityName: city.name})\r\n            }\r\n        })\r\n    };\r\n\r\n    componentWillMount() {\r\n        this.props.loadWeather(this.props.selected);\r\n        this.getCityName(this.props.selected);\r\n\r\n    }\r\n    componentWillReceiveProps(props) {\r\n        this.getCityName(props.selected)\r\n    }\r\n\r\n    render() {\r\n        return ( \r\n            <div className=\"select-wrapper pl-3 pr-3\">\r\n                <DropdownButton\r\n                    title={this.state.cityName}\r\n                >\r\n                    {\r\n                        this.cityList.map(city => {\r\n                            return (\r\n                                <Dropdown.Item eventKey={city.id} key={city.id} onSelect={this.handleChange}>\r\n                                    {city.name}\r\n                                </Dropdown.Item>\r\n                            )\r\n                        })\r\n                    }\r\n                </DropdownButton>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    state => ({\r\n        state: state.select,\r\n        selected: state.select.selectedCity\r\n    }),\r\n    dispatch => ({\r\n        changeCity: (value) => {\r\n            dispatch(changeCity(value))\r\n        },\r\n        loadWeather: (cityId) => {\r\n            dispatch(getWeather({cityId}))\r\n        }\r\n    })\r\n)(Select);","import initialState from \"../initialState\";\r\nimport {\r\n    preloaderDisplay,\r\n    error,\r\n    currentWeatherLoaded,\r\n    forecastWeatherLoaded\r\n    } from './../actions';\r\nimport store from './../index';\r\n\r\nexport default function getWeather(settings) {\r\n    let  { defaultSettings } = initialState;\r\n    settings = { ...defaultSettings, ...settings };\r\n    return dispatch => {\r\n        function fetchRequest(url, callback) {\r\n            return (\r\n                fetch(url)\r\n                    .then(response => response.json())\r\n                    .then(data => dispatch(callback(data)))\r\n                    .catch(err => {\r\n                        console.warn('Не удалось загрузить данные', err);\r\n                        dispatch(error(true));\r\n                    })\r\n            )\r\n        }\r\n        let loadCurrentWeather =  fetchRequest(`${settings.host}weather?APPID=${settings.appId}&id=${settings.cityId}&units=${settings.units}&lang=${settings.lang}`,\r\n            currentWeatherLoaded);\r\n\r\n        let loadForecastWeather = fetchRequest(`${settings.host}forecast?APPID=${settings.appId}&id=${settings.cityId}&units=${settings.units}&lang=${settings.lang}`,\r\n            forecastWeatherLoaded);\r\n\r\n        Promise.all([\r\n            loadCurrentWeather,\r\n            loadForecastWeather\r\n        ]).then(() => {\r\n            if (store.getState().weatherIcon.imgLoaded) {\r\n                dispatch(preloaderDisplay(false));\r\n            }\r\n        })\r\n    };\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport weatherIcon from '../../img/weatherIcons.png';\r\nimport './style.scss';\r\n\r\nclass WeatherIcon extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.img = new Image();\r\n        this.img.src = weatherIcon;\r\n        this.imgList = this.props.imgSettings.imgList;\r\n        this.frames = this.props.imgSettings.frames;\r\n        this.width = 0;\r\n        this.height = 0;\r\n        this.ctx = null;\r\n        this.state = {\r\n            imgLoaded: this.props.imgSettings.imgLoaded,\r\n            width: this.props.imgSettings.width ||0,\r\n            height: this.props.imgSettings.height || 0\r\n        }\r\n    }\r\n    setContext = (canvas) => {\r\n        if (!this.ctx) {\r\n            this.ctx = canvas.getContext('2d');\r\n        }\r\n        this.setIcon();\r\n    };\r\n    setIcon = () => {\r\n        if (!this.state.imgLoaded) return;\r\n\r\n        this.width = this.state.width / this.frames[0];\r\n        this.height = this.state.height / this.frames[1];\r\n        let xPosition,\r\n            yPosition;\r\n\r\n        this.imgList.forEach(item => {\r\n            if (item.name === this.props.imgData.icon) {\r\n                xPosition = this.width * item.position[0];\r\n                yPosition = this.height * item.position[1];\r\n            }\r\n        });\r\n        this.ctx.clearRect(0, 0, this.width, this.height);\r\n        this.ctx.drawImage(this.img, xPosition, yPosition, this.width, this.height, 0, 0, this.width, this.height);\r\n\r\n    };\r\n    componentDidUpdate() {\r\n        this.setIcon();\r\n    }\r\n    componentWillReceiveProps(props) {\r\n        let { imgLoaded, width, height } = props.imgSettings\r\n        this.setState({\r\n            imgLoaded,\r\n            width,\r\n            height\r\n        })\r\n    }\r\n    render () {\r\n        return (\r\n            <canvas ref={this.setContext}\r\n                    data-img={this.state.imgLoaded}\r\n                    width={this.state.width / this.frames[0]}\r\n                    height={this.state.height / this.frames[1]}\r\n                    title={this.props.imgData.description}>\r\n            </canvas>\r\n        );\r\n    }\r\n}\r\nexport default connect(\r\n    state => ({\r\n        imgSettings: state.weatherIcon\r\n    }),\r\n    dispatch => ({})\r\n)(WeatherIcon);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport WeatherIcon from '../weatherIcon';\r\nimport './style.scss';\r\n\r\nclass CurrentWeather extends Component {\r\n    getFormatDate = (date) => {\r\n        return date.getHours() + ':' + (date.getMinutes() < 10 ? '0' : '') + date.getMinutes();\r\n    };\r\n\r\n    render() {\r\n        let { data } = this.props;\r\n        if (!data) return <div>loading...</div>;\r\n        let sunset = new Date(data.sys.sunset * 1000),\r\n            sunrise = new Date(data.sys.sunrise * 1000);\r\n        return (\r\n            <div className=\"card-text current-weather d-flex flex-column flex-sm-row justify-content-around\">\r\n                <div className=\"d-flex justify-content-around\">\r\n                    <div className=\"temp d-flex align-self-center\">\r\n                        {Math.round(data.main.temp)}&deg;C\r\n                    </div>\r\n                    <div className=\"weather-icon d-flex align-self-center\">\r\n                        <WeatherIcon imgData={data.weather[0]}/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"align-self-center\">\r\n                    <div className=\"suntime\">\r\n                        <div className=\"sunrise\">\r\n                            Восход: {this.getFormatDate(sunrise)}\r\n                        </div>\r\n                        <div className=\"sunset\">\r\n                            Закат: {this.getFormatDate(sunset)}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"humidity\">\r\n                        Влажность: {data.main.humidity}%\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    state => ({\r\n        data: state.currentWeatherData\r\n    }),\r\n    dispatch => ({})\r\n)(CurrentWeather);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Tabs from 'react-bootstrap/Tabs';\r\nimport Tab from 'react-bootstrap/Tab';\r\nimport Table from 'react-bootstrap/Table';\r\nimport WeatherIcon from \"../weatherIcon\";\r\nimport './style.scss';\r\n\r\nclass Forecast extends Component {\r\n    contentList = [];\r\n    state = {\r\n        activeKey: Object.keys(this.contentList)[0]\r\n    };\r\n\r\n    tabHeaderTemplate = (date) => {\r\n        let formatDate = parseInt(date) + new Date().getTimezoneOffset() * 60;\r\n        console.log(date);\r\n        console.log(new Date(formatDate).getDate());\r\n        return (\r\n            [\r\n                <div className=\"text-center\" key='weekday'>{new Date(formatDate).toLocaleString('ru-Ru', {weekday: 'short'})}</div>,\r\n                <div className=\"text-center\" key='day'>{new Date(formatDate).getDate()}</div>,\r\n                <div className=\"text-center\" key='month'>{new Date(formatDate).toLocaleString('ru-Ru', {month: 'long'})}</div>\r\n            ]\r\n        );\r\n    };\r\n    createContentList(data) {\r\n        let currentTab;\r\n        this.contentList = [];\r\n        data.list.reduce((prev, current) => {\r\n            let currentItem = current.dt * 1000,\r\n                formatDate = new Date(currentItem);\r\n\r\n            if (!prev || (prev.getUTCDate() !== formatDate.getUTCDate())) {\r\n\r\n                currentTab = currentItem;\r\n                this.contentList[currentTab] = [];\r\n            }\r\n            this.contentList[currentTab].push(current);\r\n            return formatDate;\r\n        }, null);\r\n    }\r\n    render () {\r\n        let { data } = this.props;\r\n        if (!data) { return <div>loading...</div>}\r\n        this.createContentList(data);\r\n        return (\r\n            <Tabs\r\n                id=\"controlled-tab\"\r\n                activeKey={this.state.activeKey}\r\n                onSelect={key => this.setState({ key })}\r\n            >\r\n                {\r\n                    Object.keys(this.contentList).map(item => {\r\n                        return (\r\n                            <Tab eventKey={item} key={item} title={this.tabHeaderTemplate(item)}>\r\n                                <Table hover className='border'>\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>Время</th>\r\n                                            <th>Температура</th>\r\n                                            <th>Осадки</th>\r\n                                            <th>Влажность</th>\r\n                                            <th>Облачность</th>\r\n                                            <th>Ветер</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {\r\n                                            this.contentList[item].map((_item) => {\r\n                                                return (\r\n                                                    <tr key={_item.dt}>\r\n                                                        <th className=\"time\">{new Date(_item.dt * 1000).getUTCHours()}:00</th>\r\n                                                        <th>{Math.round(_item.main.temp)}&deg;C</th>\r\n                                                        <th>\r\n                                                            <WeatherIcon imgData={_item.weather[0]}/>\r\n                                                        </th>\r\n                                                        <th>{_item.main.humidity}%</th>\r\n                                                        <th>{_item.clouds.all}%</th>\r\n                                                        <th>\r\n                                                            <span className=\"arrow-wind\" style={{transform: 'rotate(' + Math.ceil(_item.wind.deg) + 'deg)', display: 'inline-block'}}>&#8595;</span>\r\n                                                            {Math.round(_item.wind.speed)} м/с\r\n                                                        </th>\r\n                                                    </tr>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </tbody>\r\n                                </Table>\r\n                            </Tab>\r\n                        )\r\n                    })\r\n                }\r\n            </Tabs>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    state => ({\r\n        data: state.forecastWeatherData\r\n    }),\r\n    dispatch => ({})\r\n)(Forecast);","import React, { Component } from 'react';\r\nimport { Alert } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport './style.scss';\r\n\r\nclass Error extends Component {\r\n    render () {\r\n        return (\r\n            <div className='error-wrap' style={{display: (this.props.error) ? 'block' : 'none'}}>\r\n                <Alert variant='danger' className='error'>\r\n                    <Alert.Heading className='text-center'>Соединение с сервером потеряно!</Alert.Heading>\r\n                    <p className='error-page text-center'>Попробуйте снова позже.</p>\r\n                </Alert>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    state => ({\r\n        error: state.error\r\n    }),\r\n    dispatch => ({})\r\n)(Error);","import React, { Component, Fragment } from 'react';\nimport Preloader from './preloader';\nimport Select from './select';\nimport CurrentWeather from './currentWeather';\nimport ForecastWeather from './forecastWeather';\nimport Error from './errorPage';\n\nclass App extends Component {\n    render() {\n        return (\n            <Fragment>\n                <Preloader/>\n                <div className='container'>\n                    <div id=\"weather-content\">\n                        <div className=\"card text-white bg-primary mt-3 pb-3\">\n                            <div className=\"d-flex flex-sm-row flex-column justify-content-center mt-3 mb-3\">\n                                <h5 className=\"card-title text-center\">Погода в городах Украины</h5>\n                                <Select/>\n                            </div>\n                            <CurrentWeather/>\n                        </div>\n                        <div id=\"forecast-weather\" className='mt-3'>\n                            <ForecastWeather/>\n                        </div>\n                    </div>\n                </div>\n                <Error/>\n            </Fragment>\n        );\n    }\n}\n\nexport default App;","import React from 'react';\nimport { render } from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './components/App';\nimport preloadImage from './preloadImage';\nimport reducer from './reducers';\nimport thunk from 'redux-thunk';\n\n\nconst store = createStore(reducer, applyMiddleware(thunk));\nexport default store;\nstore.dispatch(preloadImage());\n// store.subscribe(() => {\n//     console.log('subscribe', store.getState());\n// });\n\nrender(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root'));\n\n","import initialState from \"../initialState\";\r\n\r\nexport default function reducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'preloaderDisplay': {\r\n            return {\r\n                ...state,\r\n                preloader: {\r\n                    ...state.preloader,\r\n                    display: action.display\r\n                }\r\n            }\r\n        }\r\n        case 'changeCity': {\r\n            return {\r\n                ...state,\r\n                select:  {\r\n                    ...state.select,\r\n                    selectedCity: action.cityId\r\n                }\r\n            }\r\n        }\r\n        case 'setCurrentWeather': {\r\n            return {\r\n                ...state,\r\n                currentWeatherData: action.data\r\n            }\r\n        }\r\n        case 'setForecastWeather': {\r\n            return {\r\n                ...state,\r\n                forecastWeatherData: action.data\r\n            }\r\n        }\r\n        case 'imgLoaded': {\r\n            return {\r\n                ...state,\r\n                weatherIcon: {\r\n                    ...state.weatherIcon,\r\n                    imgLoaded: action.isLoaded,\r\n                    width: action.width,\r\n                    height: action.height\r\n                }\r\n            };\r\n        }\r\n        case 'error': {\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            }\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n","import weatherIcon from './img/weatherIcons.png';\r\nimport {imgLoaded, preloaderDisplay} from './actions';\r\nimport store from './index';\r\n\r\nexport default function preloadImage() {\r\n    return (dispatch) => {\r\n        let img = new Image();\r\n        img.src = weatherIcon;\r\n        img.addEventListener('load', () => {\r\n            dispatch(imgLoaded(true, img.width, img.height));\r\n            if (store.getState().currentWeatherData\r\n                && store.getState().forecastWeatherData) {\r\n                dispatch(preloaderDisplay(false));\r\n            }\r\n        });\r\n    }\r\n}","module.exports = __webpack_public_path__ + \"static/media/weatherIcons.c60201fe.png\";"],"sourceRoot":""}