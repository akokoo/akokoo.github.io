{"version":3,"sources":["initialState.js","actions/index.js","components/app/index.js","components/task/index.js","components/addTaskForm/index.js","utils/index.js","components/mainPage/index.js","components/taskDetails/index.js","index.js","reducers/index.js","fetch/index.js"],"names":["initialState","tasksListLoaded","tasksList","editable","data","type","formEditable","bool","taskDetails","status","App","react_default","a","createElement","className","this","props","children","Component","Task","state","_this","settings","taskHeader","taskStatus","animate","setState","Object","objectSpread","changeTaskStatus","id","done","showTaskDetails","history","push","editTask","deleteTask","editStatus","nextProps","_this2","statusAnimate","statusDone","concat","ref","node","onChange","checked","readOnly","value","title","onClick","withRouter","connect","dispatch","AddTaskForm","buttonTitle","taskTitle","taskDescription","submit","addTask","focus","description","placeholder","words","length","Math","floor","random","generateId","MainPage","tasks","map","task","components_task","key","components_addTaskForm","TaskDetails","back","location","disabled","store","createStore","arguments","undefined","action","toConsumableArray","filter","window","localStorage","getItem","JSON","parse","fetch","then","res","json","setItem","stringify","catch","err","console","error","render","es","react_router_dom","app","react_router","exact","path","component","components_taskDetails","document","getElementById"],"mappings":"6UAMeA,EANI,CACfC,iBAAiB,EACjBC,UAAW,GACXC,UAAU,GCFP,SAASF,EAAgBG,GAC5B,MAAO,CACHC,KAAM,kBACND,QAmBD,SAASE,EAAaC,EAAMC,GAC/B,MAAO,CACHH,KAAM,eACNI,OAAQF,EACRC,YAAaA,GAA2B,2DCdjCE,0LARP,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACVC,KAAKC,MAAMC,iBAJVC,cCGZC,oNACFC,qBACOC,EAAKL,MAAMM,YAElBC,WAAa,OACbC,WAAa,YACRH,EAAKD,MAAMK,SAAWJ,EAAKK,SAALC,OAAAC,EAAA,EAAAD,CAAA,GAAkBN,EAAKD,MAAvB,CAA8BK,SAAW,KAChEJ,EAAKL,MAAMa,iBAAiBR,EAAKD,MAAMU,IAAKT,EAAKD,MAAMW,SAE3DC,gBAAkB,WACdX,EAAKL,MAAMiB,QAAQC,KAAK,gBAAiBb,EAAKD,UAElDe,SAAW,WACPd,EAAKL,MAAMV,cAAa,EAAMe,EAAKD,UAEvCgB,WAAa,WACTf,EAAKL,MAAMoB,WAAWf,EAAKD,MAAMU,IAC7BT,EAAKL,MAAMqB,YACXhB,EAAKD,MAAMU,KAAOT,EAAKL,MAAMR,YAAYsB,IACzCT,EAAKL,MAAMV,cAAa,6FAGNgC,GACtBvB,KAAKW,SAALC,OAAAC,EAAA,EAAAD,CAAA,GAAkBW,EAAUhB,4CAEvB,IAAAiB,EAAAxB,KACDyB,EAAgBzB,KAAKK,MAAMK,QAAU,UAAY,GACjDgB,EAAa1B,KAAKK,MAAMW,KAAO,OAAS,SAC5C,OACIpB,EAAAC,EAAAC,cAAA,OAAKC,UAAS,QAAA4B,OAAUD,EAAV,KAAAC,OAAwBF,GACjCG,IAAK,SAAAC,GAAI,OAAIL,EAAKhB,WAAaqB,IAEhCjC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4DACXH,EAAAC,EAAAC,cAAA,SAAOR,KAAK,WACLS,UAAU,kBACV+B,SAAU9B,KAAKS,WACfsB,UAAW/B,KAAKK,MAAMW,OAE7BpB,EAAAC,EAAAC,cAAA,SAAOC,UAAU,0BACViC,UAAU,EACVC,MAAOjC,KAAKK,MAAM6B,MAClBC,QAASnC,KAAKiB,kBAErBrB,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kBACVoC,QAASnC,KAAKoB,UADtB,UAIAxB,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iBAAiBoC,QAASnC,KAAKqB,YAAjD,iBA/CDlB,cAsDJiC,cAAWC,YACtB,SAAAhC,GAAK,MAAK,CACNiB,WAAYjB,EAAMjB,SAClBK,YAAaY,EAAMZ,cAEvB,SAAA6C,GAAQ,MAAK,CACTjB,WAAc,SAAAN,GACVuB,EFpCL,SAAoBvB,GACvB,MAAO,CACHzB,KAAM,aACNyB,MEiCaM,CAAWN,KAExBxB,aAAgB,SAACC,EAAMC,GACnB6C,EAAS/C,EAAaC,EAAMC,KAEhCqB,iBAAoB,SAACC,EAAIC,GACrBsB,EFnCL,SAA0BvB,EAAIC,GACjC,MAAO,CACH1B,KAAM,mBACNyB,KACAC,QE+BaF,CAAiBC,EAAIC,OAbhBqB,CAgBxBjC,cCtEImC,6MACFlC,MAAQ,CACJmC,YAAe,OAEnBC,UAAY,OACZC,gBAAkB,OAClBF,YAAc,OAEdG,OAAS,WACArC,EAAKmC,UAAUR,MAER3B,EAAKL,MAAMqB,YAGnBhB,EAAKL,MAAMmB,SAASd,EAAKmC,UAAUR,MAAO3B,EAAKoC,gBAAgBT,MAAO3B,EAAKL,MAAMR,YAAYsB,IAC7FT,EAAKL,MAAMb,UAAS,IAHpBkB,EAAKL,MAAM2C,QAAQtC,EAAKmC,UAAUR,MAAO3B,EAAKoC,gBAAgBT,OAF9D3B,EAAKmC,UAAUI,QAOnBvC,EAAKmC,UAAUR,MAAQ,KACvB3B,EAAKoC,gBAAgBT,MAAQ,+FAEPV,GACtBvB,KAAKyC,UAAUR,MAAQV,EAAU9B,YAAc8B,EAAU9B,YAAYyC,MAAQ,KAC7ElC,KAAK0C,gBAAgBT,MAAQV,EAAU9B,YAAc8B,EAAU9B,YAAYqD,YAAc,KACzF9C,KAAKW,SAALC,OAAAC,EAAA,EAAAD,CAAA,GAAkBZ,KAAKK,MAAvB,CAA8BmC,YAAejB,EAAUD,WAAa,OAAS,wCAExE,IAAAE,EAAAxB,KACL,OACIJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uDACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,eACVgD,YAAY,QACZnB,IAAK,SAAAC,GAAI,OAAIL,EAAKiB,UAAYZ,KAErCjC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,2BAA2BoC,QAASnC,KAAK2C,OACnDf,IAAK,SAAAC,GAAI,OAAIL,EAAKgB,YAAcX,IAEnC7B,KAAKK,MAAMmC,cAGpB5C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6DACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,eACVgD,YAAY,cACZnB,IAAK,SAAAC,GAAI,OAAIL,EAAKkB,gBAAkBb,eA3CzC1B,aAoDXkC,cACX,SAAAhC,GAAK,MAAK,CACNiB,WAAYjB,EAAMjB,SAClBK,YAAaY,EAAMZ,cAEvB,SAAA6C,GAAQ,MAAK,CACTM,QAAW,SAACH,EAAWC,GHxDxB,IAAiBR,EAAOY,EGyDnBR,GHzDYJ,EGyDKO,EHzDEK,EGyDSJ,EHxD7B,CACHpD,KAAM,UACND,KAAM,CAAC0B,GIXR,WAIH,IAHA,IAAIA,EAAK,GACLiC,EAAQ,iEAELjC,EAAGkC,OAAS,IAEflC,GAAMiC,EADME,KAAKC,MAAMD,KAAKE,SAAWJ,EAAMC,SAGjD,OAAOlC,EDyD8CsC,GHtDtCnB,QAAOY,mBGwDlB1B,SAAY,SAACc,EAAOY,EAAa/B,GAC7BuB,EHpDL,SAAkBJ,EAAOY,EAAa/B,GACzC,MAAO,CACHzB,KAAM,WACND,KAAM,CAAC0B,KAAImB,QAAOY,gBGiDL1B,CAASc,EAAOY,EAAa/B,KAE1C3B,SAAY,SAAAI,GACR8C,EAAS/C,EAAaC,OAbnB6C,CAgBbE,GEpEIe,0LAEE,IAAInE,EAAYa,KAAKC,MAAMsD,MAAMC,IAAI,SAAAC,GACjC,OACI7D,EAAAC,EAAAC,cAAC4D,EAAD,CAAMC,IAAKF,EAAK1C,GAAIR,SAAUkD,MAGtC,OACI7D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAf,cAEJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACVZ,IAGTS,EAAAC,EAAAC,cAAC8D,EAAD,cAjBOzD,cAwBRkC,cACX,SAAAhC,GAAK,MAAK,CACNkD,MAAOlD,EAAMlB,YAEjB,KAJWkD,CAKbiB,GCHaO,oNA5BXC,KAAO,WACHxD,EAAKL,MAAMiB,QAAQC,KAAK,8EAGxB,IAAI1B,EAAcO,KAAKC,MAAM8D,SAAS1D,MACtC,OACIT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAf,gBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACXH,EAAAC,EAAAC,cAAA,SAAOkE,UAAU,EACVjE,UAAU,uCACVkC,MAAOxC,EAAYyC,QAE1BtC,EAAAC,EAAAC,cAAA,SAAOkE,UAAU,EACVjE,UAAU,gCACVkC,MAAOxC,EAAYqD,cAE1BlD,EAAAC,EAAAC,cAAA,UAAQC,UAAU,uBACVoC,QAASnC,KAAK8D,MADtB,iBAlBM3D,cCYtB8D,EAAQC,YCbG,WAA+C,IAA9B7D,EAA8B8D,UAAAlB,OAAA,QAAAmB,IAAAD,UAAA,GAAAA,UAAA,GAAtBlF,EAAcoF,EAAQF,UAAAlB,OAAA,EAAAkB,UAAA,QAAAC,EAC1D,OAAQC,EAAO/E,MACX,IAAK,kBACD,OAAOsB,OAAAC,EAAA,EAAAD,CAAA,GACAP,EADP,CAEInB,iBAAiB,EACjBC,UAAWkF,EAAOhF,OAG1B,IAAK,UACD,OAAOuB,OAAAC,EAAA,EAAAD,CAAA,GACAP,EADP,CAEIlB,UAAS,GAAAwC,OAAAf,OAAA0D,EAAA,EAAA1D,CAAMP,EAAMlB,WAAZ,CAAuBkF,EAAOhF,SAG/C,IAAK,WACD,OAAOuB,OAAAC,EAAA,EAAAD,CAAA,GACAP,EADP,CAEIlB,UAAWkB,EAAMlB,UAAUqE,IAAI,SAAAC,GAC3B,OAAIA,EAAK1C,KAAOsD,EAAOhF,KAAK0B,GACjBsD,EAAOhF,KAEPoE,MAKvB,IAAK,aACD,OAAO7C,OAAAC,EAAA,EAAAD,CAAA,GACAP,EADP,CAEIlB,UAAWkB,EAAMlB,UAAUoF,OAAO,SAAAd,GAC9B,OAAOA,EAAK1C,KAAOsD,EAAOtD,OAItC,IAAK,eACD,OAAOH,OAAAC,EAAA,EAAAD,CAAA,GACAP,EADP,CAEIjB,SAAUiF,EAAO3E,OACjBD,YAAa4E,EAAO5E,cAG5B,IAAK,mBACD,OAAOmB,OAAAC,EAAA,EAAAD,CAAA,GACAP,EADP,CAEIlB,UAAWkB,EAAMlB,UAAUqE,IAAI,SAAAC,GAC3B,OAAIA,EAAK1C,KAAOsD,EAAOtD,GACZH,OAAAC,EAAA,EAAAD,CAAA,GACA6C,EADP,CAEIzC,KAAMqD,EAAOrD,OAGVyC,MAKvB,QACI,OAAOpD,KD5CJ4D,cAEf,GAAKO,OAAOC,aAAaC,QAAQ,aAE1B,CACH,IAAIvF,EAAYwF,KAAKC,MAAMJ,OAAOC,aAAaC,QAAQ,cACvDT,EAAM3B,SAASpD,EAAgBC,SElBxB0F,MAAM,mBACRC,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAzF,GACFmF,OAAOC,aAAaQ,QAAQ,YAAaN,KAAKO,UAAU7F,IACxD4E,EAAM3B,SAASpD,EAAgBG,MAElC8F,MAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAM,QAASF,KFe7CG,iBACI3F,EAAAC,EAAAC,cAAC0F,EAAA,EAAD,CAAUvB,MAAOA,GACbrE,EAAAC,EAAAC,cAAC2F,EAAA,EAAD,KACI7F,EAAAC,EAAAC,cAAC4F,EAAD,KACI9F,EAAAC,EAAAC,cAAC6F,EAAA,EAAD,KACI/F,EAAAC,EAAAC,cAAC6F,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWxC,IACjC1D,EAAAC,EAAAC,cAAC6F,EAAA,EAAD,CAAOE,KAAK,gBAAgBC,UAAW,SAAA7F,GAAK,OAAIL,EAAAC,EAAAC,cAACiG,EAAgB9F,UAKjF+F,SAASC,eAAe","file":"static/js/main.330e2331.chunk.js","sourcesContent":["let initialState = {\r\n    tasksListLoaded: false,\r\n    tasksList: [],\r\n    editable: false\r\n};\r\n\r\nexport default initialState;","\r\nexport function tasksListLoaded(data) {\r\n    return {\r\n        type: 'tasksListLoaded',\r\n        data\r\n    }\r\n}\r\n\r\nexport function addTask(title, description, id) {\r\n    return {\r\n        type: 'addTask',\r\n        data: {id, title, description}\r\n\r\n    }\r\n}\r\n\r\nexport function editTask(title, description, id) {\r\n    return {\r\n        type: 'editTask',\r\n        data: {id, title, description}\r\n    }\r\n}\r\n\r\nexport function formEditable(bool, taskDetails) {\r\n    return {\r\n        type: 'formEditable',\r\n        status: bool,\r\n        taskDetails: taskDetails ? taskDetails: null\r\n    }\r\n}\r\n\r\nexport function deleteTask(id) {\r\n    return {\r\n        type: 'deleteTask',\r\n        id\r\n    }\r\n}\r\n\r\nexport function changeTaskStatus(id, done) {\r\n    return {\r\n        type: 'changeTaskStatus',\r\n        id,\r\n        done\r\n    }\r\n}","import React, { Component } from 'react';\nimport './App.scss';\n\nclass App extends Component {\n    render() {\n        return (\n            <div className=\"App\">\n                {this.props.children}\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { deleteTask, formEditable, changeTaskStatus } from './../../actions';\r\nimport './task.scss';\r\n\r\nclass Task extends Component {\r\n    state = {\r\n        ...this.props.settings\r\n    };\r\n    taskHeader = null;\r\n    taskStatus = () => {\r\n        !this.state.animate && this.setState({...this.state, 'animate': true});\r\n        this.props.changeTaskStatus(this.state.id, !this.state.done);\r\n    };\r\n    showTaskDetails = () => {\r\n        this.props.history.push('/task-details', this.state);\r\n    };\r\n    editTask = () => {\r\n        this.props.formEditable(true, this.state);\r\n    };\r\n    deleteTask = () => {\r\n        this.props.deleteTask(this.state.id);\r\n        if (this.props.editStatus &&\r\n            this.state.id === this.props.taskDetails.id) {\r\n            this.props.formEditable(false);\r\n        }\r\n    };\r\n    componentWillReceiveProps(nextProps) {\r\n        this.setState({...nextProps.settings});\r\n    }\r\n    render() {\r\n        let statusAnimate = this.state.animate ? 'animate' : '',\r\n            statusDone = this.state.done ? 'done' : 'undone';\r\n        return (\r\n            <div className={`task ${statusDone} ${statusAnimate}`}\r\n                 ref={node => this.taskHeader = node}\r\n            >\r\n                <div className='task-container form-group d-flex align-items-center my-1'>\r\n                    <input type='checkbox'\r\n                           className='task-check mr-1'\r\n                           onChange={this.taskStatus}\r\n                           checked={!!this.state.done}\r\n                    />\r\n                    <input className='task-title form-control'\r\n                           readOnly={true}\r\n                           value={this.state.title}\r\n                           onClick={this.showTaskDetails}\r\n                    />\r\n                    <button className='btn btn-warning'\r\n                            onClick={this.editTask}\r\n                    >&#9998;\r\n                    </button>\r\n                    <button className='btn btn-danger' onClick={this.deleteTask}>&times;</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(\r\n    state => ({\r\n        editStatus: state.editable,\r\n        taskDetails: state.taskDetails\r\n    }),\r\n    dispatch => ({\r\n        'deleteTask': id => {\r\n            dispatch(deleteTask(id))\r\n        },\r\n        'formEditable': (bool, taskDetails) => {\r\n            dispatch(formEditable(bool, taskDetails))\r\n        },\r\n        'changeTaskStatus': (id, done) => {\r\n            dispatch(changeTaskStatus(id, done))\r\n        }\r\n    })\r\n)(Task));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { generateId } from './../../utils';\r\nimport { addTask, editTask, formEditable } from \"./../../actions\";\r\nimport './addTaskForm.scss';\r\n\r\nclass AddTaskForm extends Component {\r\n    state = {\r\n        'buttonTitle': '+'\r\n    };\r\n    taskTitle = null;\r\n    taskDescription = null;\r\n    buttonTitle = null;\r\n\r\n    submit = () => {\r\n        if (!this.taskTitle.value) {\r\n            this.taskTitle.focus();\r\n        } else if (!this.props.editStatus) {\r\n            this.props.addTask(this.taskTitle.value, this.taskDescription.value);\r\n        } else {\r\n            this.props.editTask(this.taskTitle.value, this.taskDescription.value, this.props.taskDetails.id);\r\n            this.props.editable(false);\r\n        }\r\n        this.taskTitle.value = null;\r\n        this.taskDescription.value = null;\r\n    };\r\n    componentWillReceiveProps(nextProps) {\r\n        this.taskTitle.value = nextProps.taskDetails ? nextProps.taskDetails.title : null;\r\n        this.taskDescription.value = nextProps.taskDetails ? nextProps.taskDetails.description : null;\r\n        this.setState({...this.state, 'buttonTitle': nextProps.editStatus ? 'save' : '+'});\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='todo-form card m-2 bg-light'>\r\n                <div className='card-body'>\r\n                    <div className=\"form-group d-flex justify-content-center mt-3 title\">\r\n                        <input className='form-control'\r\n                               placeholder='Title'\r\n                               ref={node => this.taskTitle = node}\r\n                        />\r\n                        <button className='btn btn-primary btn-form' onClick={this.submit}\r\n                                ref={node => this.buttonTitle = node}\r\n                        >\r\n                            {this.state.buttonTitle}\r\n                        </button>\r\n                    </div>\r\n                    <div className='form-group form-inline justify-content-center description'>\r\n                        <input className='form-control'\r\n                               placeholder='Description'\r\n                               ref={node => this.taskDescription = node}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    state => ({\r\n        editStatus: state.editable,\r\n        taskDetails: state.taskDetails\r\n    }),\r\n    dispatch => ({\r\n        'addTask': (taskTitle, taskDescription) => {\r\n            dispatch(addTask(taskTitle, taskDescription, generateId()));\r\n        },\r\n        'editTask': (title, description, id) => {\r\n            dispatch(editTask(title, description, id))\r\n        },\r\n        'editable': bool => {\r\n            dispatch(formEditable(bool))\r\n        }\r\n    })\r\n)(AddTaskForm);","export function generateId() {\r\n    let id = '',\r\n        words = '0123456789qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM',\r\n        randomNum;\r\n    while (id.length < 15) {\r\n        randomNum = Math.floor(Math.random() * words.length);\r\n        id += words[randomNum];\r\n    }\r\n    return id;\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Task from './../task';\r\nimport AddTaskForm from './../addTaskForm';\r\nimport './mainPage.scss';\r\n\r\nclass MainPage extends Component {\r\n    render() {\r\n        let tasksList = this.props.tasks.map(task => {\r\n            return (\r\n                <Task key={task.id} settings={task}/>\r\n            )\r\n        });\r\n        return (\r\n            <div className='todo-container todo-frame'>\r\n                <div className='todo-list'>\r\n                    <div className='frame-header'>\r\n                        <div className='frame-title'>Todo List</div>\r\n                    </div>\r\n                    <div className='list mt-1'>\r\n                        {tasksList}\r\n                    </div>\r\n                </div>\r\n                <AddTaskForm/>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    state => ({\r\n        tasks: state.tasksList\r\n    }),\r\n    null\r\n)(MainPage);","import React, { Component} from 'react';\r\nimport './taskDetails.scss';\r\n\r\nclass TaskDetails extends Component {\r\n    back = () => {\r\n        this.props.history.push('/');\r\n    };\r\n    render() {\r\n        let taskDetails = this.props.location.state;\r\n        return (\r\n            <div className='task-details todo-frame'>\r\n                <div className='frame-header'>Task details</div>\r\n                <div className='form-wrapper mx-auto'>\r\n                    <input disabled={true}\r\n                           className='form-control form-inline title my-3 '\r\n                           value={taskDetails.title}\r\n                    />\r\n                    <input disabled={true}\r\n                           className='form-control description my-3'\r\n                           value={taskDetails.description}\r\n                    />\r\n                    <button className='btn btn-success mb-3'\r\n                            onClick={this.back}\r\n                    >\r\n                        Back\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TaskDetails;","import React from 'react';\nimport { render } from 'react-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nimport reducer from './reducers';\nimport loadTasksList from './fetch';\nimport { tasksListLoaded } from \"./actions\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.scss';\nimport App from './components/app';\nimport MainPage from \"./components/mainPage\";\nimport TaskDetails from \"./components/taskDetails\";\n\nlet store = createStore(reducer);\nexport default store;\n\nif (!window.localStorage.getItem('tasksList')) {\n    loadTasksList();\n} else {\n    let tasksList = JSON.parse(window.localStorage.getItem('tasksList'));\n    store.dispatch(tasksListLoaded(tasksList));\n}\n\nrender(\n    <Provider store={store}>\n        <BrowserRouter>\n            <App>\n                <Switch>\n                    <Route exact path='/' component={MainPage} />\n                    <Route path='/task-details' component={props => <TaskDetails {...props} />}/>\n                </Switch>\n            </App>\n        </BrowserRouter>\n    </Provider>,\n    document.getElementById('root'));","import initialState from './../initialState';\r\n\r\nexport default function reducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'tasksListLoaded': {\r\n            return {\r\n                ...state,\r\n                tasksListLoaded: true,\r\n                tasksList: action.data\r\n            }\r\n        }\r\n        case 'addTask': {\r\n            return {\r\n                ...state,\r\n                tasksList: [...state.tasksList, action.data]\r\n            }\r\n        }\r\n        case 'editTask': {\r\n            return {\r\n                ...state,\r\n                tasksList: state.tasksList.map(task => {\r\n                    if (task.id === action.data.id) {\r\n                        return action.data;\r\n                    } else {\r\n                        return task;\r\n                    }\r\n                })\r\n            }\r\n        }\r\n        case 'deleteTask': {\r\n            return {\r\n                ...state,\r\n                tasksList: state.tasksList.filter(task => {\r\n                    return task.id !== action.id\r\n                })\r\n            }\r\n        }\r\n        case 'formEditable': {\r\n            return {\r\n                ...state,\r\n                editable: action.status,\r\n                taskDetails: action.taskDetails\r\n            }\r\n        }\r\n        case 'changeTaskStatus': {\r\n            return {\r\n                ...state,\r\n                tasksList: state.tasksList.map(task => {\r\n                    if (task.id === action.id) {\r\n                        return {\r\n                            ...task,\r\n                            done: action.done\r\n                        }\r\n                    } else {\r\n                        return task\r\n                    }\r\n                })\r\n            }\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}","import store from './../index';\r\nimport { tasksListLoaded } from './../actions';\r\n\r\nexport default function loadTasksList() {\r\n    return fetch('/tasksList.json')\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            window.localStorage.setItem('tasksList', JSON.stringify(data));\r\n            store.dispatch(tasksListLoaded(data));\r\n        })\r\n        .catch(err => console.error('ERROR', err));\r\n}"],"sourceRoot":""}